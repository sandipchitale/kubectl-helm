# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI and release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run pkg --if-present
    - name: Create windows archive
      uses: a7ul/tar-action@v1.1.0
      id: windows_archive
      with:
        command: c
        cwd: ./dist/win/bin
        files: |
          ./kubectl-helm.exe
          ./LICENSE
        outPath: dist/kubectl-tree_${{ github.ref }}_windows_amd64.tar.gz
    - name: Create linux archive
      uses: a7ul/tar-action@v1.1.0
      id: windows_archive
      with:
        command: c
        cwd: ./dist/linux/bin
        files: |
          ./kubectl-helm.exe
          ./LICENSE
        outPath: dist/kubectl-tree_${{ github.ref }}_linux_amd64.tar.gz
    - name: Create macos archive
      uses: a7ul/tar-action@v1.1.0
      id: windows_archive
      with:
        command: c
        cwd: ./dist/macos/bin
        files: |
          ./kubectl-helm
          ./LICENSE
        outPath: dist/kubectl-tree_${{ github.ref }}_darwin_amd64.tar.gz
    - name: Upload archives
      uses: actions/upload-artifact@v3
      with:
        name: archives
        path: |
          dist/kubectl-tree_${{ github.ref }}_windows_amd64.tar.gz
          dist/kubectl-tree_${{ github.ref }}_linux_amd64.tar.gz
          dist/kubectl-tree_${{ github.ref }}_darwin_amd64.tar.gz
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries and LICENSE zip
        uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release:
          draft: true
          prerelease: true


